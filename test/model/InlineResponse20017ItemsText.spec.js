/**
 * CourtAPI
 * Automate PACER Access
 *
 * OpenAPI spec version: 0.9.2
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CourtApi);
  }
}(this, function(expect, CourtApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CourtApi.InlineResponse20017ItemsText();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('InlineResponse20017ItemsText', function() {
    it('should create an instance of InlineResponse20017ItemsText', function() {
      // uncomment below and update the code to test InlineResponse20017ItemsText
      //var instane = new CourtApi.InlineResponse20017ItemsText();
      //expect(instance).to.be.a(CourtApi.InlineResponse20017ItemsText);
    });

    it('should have the property assignedTo (base name: "assigned_to")', function() {
      // uncomment below and update the code to test the property assignedTo
      //var instane = new CourtApi.InlineResponse20017ItemsText();
      //expect(instance).to.be();
    });

    it('should have the property caseUuid (base name: "case_uuid")', function() {
      // uncomment below and update the code to test the property caseUuid
      //var instane = new CourtApi.InlineResponse20017ItemsText();
      //expect(instance).to.be();
    });

    it('should have the property cause (base name: "cause")', function() {
      // uncomment below and update the code to test the property cause
      //var instane = new CourtApi.InlineResponse20017ItemsText();
      //expect(instance).to.be();
    });

    it('should have the property dateTerminated (base name: "date_terminated")', function() {
      // uncomment below and update the code to test the property dateTerminated
      //var instane = new CourtApi.InlineResponse20017ItemsText();
      //expect(instance).to.be();
    });

    it('should have the property jurisdiction (base name: "jurisdiction")', function() {
      // uncomment below and update the code to test the property jurisdiction
      //var instane = new CourtApi.InlineResponse20017ItemsText();
      //expect(instance).to.be();
    });

    it('should have the property juryDemand (base name: "jury_demand")', function() {
      // uncomment below and update the code to test the property juryDemand
      //var instane = new CourtApi.InlineResponse20017ItemsText();
      //expect(instance).to.be();
    });

    it('should have the property natureOfSuitCode (base name: "nature_of_suit_code")', function() {
      // uncomment below and update the code to test the property natureOfSuitCode
      //var instane = new CourtApi.InlineResponse20017ItemsText();
      //expect(instance).to.be();
    });

    it('should have the property referredTo (base name: "referred_to")', function() {
      // uncomment below and update the code to test the property referredTo
      //var instane = new CourtApi.InlineResponse20017ItemsText();
      //expect(instance).to.be();
    });

  });

}));
