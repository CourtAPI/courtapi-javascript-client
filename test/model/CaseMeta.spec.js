/**
 * CourtAPI
 * Automate PACER Access
 *
 * OpenAPI spec version: 0.9.2
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CourtApi);
  }
}(this, function(expect, CourtApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CourtApi.CaseMeta();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CaseMeta', function() {
    it('should create an instance of CaseMeta', function() {
      // uncomment below and update the code to test CaseMeta
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be.a(CourtApi.CaseMeta);
    });

    it('should have the property assets (base name: "assets")', function() {
      // uncomment below and update the code to test the property assets
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property assignedTo (base name: "assigned_to")', function() {
      // uncomment below and update the code to test the property assignedTo
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property caseChapterId (base name: "case_chapter_id")', function() {
      // uncomment below and update the code to test the property caseChapterId
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property caseCourtId (base name: "case_court_id")', function() {
      // uncomment below and update the code to test the property caseCourtId
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property caseId (base name: "case_id")', function() {
      // uncomment below and update the code to test the property caseId
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property caseIdExternal (base name: "case_id_external")', function() {
      // uncomment below and update the code to test the property caseIdExternal
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property caseNo (base name: "case_no")', function() {
      // uncomment below and update the code to test the property caseNo
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property casePetitionId (base name: "case_petition_id")', function() {
      // uncomment below and update the code to test the property casePetitionId
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property caseTitle (base name: "case_title")', function() {
      // uncomment below and update the code to test the property caseTitle
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property caseTypeId (base name: "case_type_id")', function() {
      // uncomment below and update the code to test the property caseTypeId
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property caseUuid (base name: "case_uuid")', function() {
      // uncomment below and update the code to test the property caseUuid
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property cause (base name: "cause")', function() {
      // uncomment below and update the code to test the property cause
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property ch11Type (base name: "ch11_type")', function() {
      // uncomment below and update the code to test the property ch11Type
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property ch11TypeCode (base name: "ch11_type_code")', function() {
      // uncomment below and update the code to test the property ch11TypeCode
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property chapter (base name: "chapter")', function() {
      // uncomment below and update the code to test the property chapter
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property citation (base name: "citation")', function() {
      // uncomment below and update the code to test the property citation
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property court (base name: "court")', function() {
      // uncomment below and update the code to test the property court
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property courtName (base name: "court_name")', function() {
      // uncomment below and update the code to test the property courtName
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property created (base name: "created")', function() {
      // uncomment below and update the code to test the property created
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property dateClosed (base name: "date_closed")', function() {
      // uncomment below and update the code to test the property dateClosed
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property dateDischarged (base name: "date_discharged")', function() {
      // uncomment below and update the code to test the property dateDischarged
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property dateFiled (base name: "date_filed")', function() {
      // uncomment below and update the code to test the property dateFiled
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property dateOfLastFiling (base name: "date_of_last_filing")', function() {
      // uncomment below and update the code to test the property dateOfLastFiling
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property datePlanConfirmed (base name: "date_plan_confirmed")', function() {
      // uncomment below and update the code to test the property datePlanConfirmed
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property dateTerminated (base name: "date_terminated")', function() {
      // uncomment below and update the code to test the property dateTerminated
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property disabled (base name: "disabled")', function() {
      // uncomment below and update the code to test the property disabled
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property disposition (base name: "disposition")', function() {
      // uncomment below and update the code to test the property disposition
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property hasAsset (base name: "has_asset")', function() {
      // uncomment below and update the code to test the property hasAsset
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property industry (base name: "industry")', function() {
      // uncomment below and update the code to test the property industry
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property isBusinessBankruptcy (base name: "is_business_bankruptcy")', function() {
      // uncomment below and update the code to test the property isBusinessBankruptcy
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property judgeName (base name: "judge_name")', function() {
      // uncomment below and update the code to test the property judgeName
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property jurisdiction (base name: "jurisdiction")', function() {
      // uncomment below and update the code to test the property jurisdiction
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property juryDemand (base name: "jury_demand")', function() {
      // uncomment below and update the code to test the property juryDemand
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property liabilities (base name: "liabilities")', function() {
      // uncomment below and update the code to test the property liabilities
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property modified (base name: "modified")', function() {
      // uncomment below and update the code to test the property modified
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property naicsCode (base name: "naics_code")', function() {
      // uncomment below and update the code to test the property naicsCode
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property natureOfDebt (base name: "nature_of_debt")', function() {
      // uncomment below and update the code to test the property natureOfDebt
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property natureOfSuitCode (base name: "nature_of_suit_code")', function() {
      // uncomment below and update the code to test the property natureOfSuitCode
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property referredTo (base name: "referred_to")', function() {
      // uncomment below and update the code to test the property referredTo
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property timestamp (base name: "timestamp")', function() {
      // uncomment below and update the code to test the property timestamp
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property uriId (base name: "uri_id")', function() {
      // uncomment below and update the code to test the property uriId
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

    it('should have the property website (base name: "website")', function() {
      // uncomment below and update the code to test the property website
      //var instane = new CourtApi.CaseMeta();
      //expect(instance).to.be();
    });

  });

}));
