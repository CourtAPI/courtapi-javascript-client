/**
 * CourtAPI
 * Automate PACER Access
 *
 * OpenAPI spec version: 0.9.2
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.CourtApi) {
      root.CourtApi = {};
    }
    root.CourtApi.CaseLookupApi = factory(root.CourtApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * CaseLookup service.
   * @module api/CaseLookupApi
   * @version 0.9.2
   */

  /**
   * Constructs a new CaseLookupApi. 
   * @alias module:api/CaseLookupApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the casesPacerSearchCaseNoCaseNumberGet operation.
     * @callback module:api/CaseLookupApi~casesPacerSearchCaseNoCaseNumberGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Case Search by Case Number
     * Case Search by Case Number
     * @param {String} caseNumber Case Number
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageSize Page Size
     * @param {Number} opts.pageNumber Page Number
     * @param {module:api/CaseLookupApi~casesPacerSearchCaseNoCaseNumberGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.casesPacerSearchCaseNoCaseNumberGet = function(caseNumber, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'caseNumber' is set
      if (caseNumber === undefined || caseNumber === null) {
        throw new Error("Missing the required parameter 'caseNumber' when calling casesPacerSearchCaseNoCaseNumberGet");
      }


      var pathParams = {
        'case_number': caseNumber
      };
      var queryParams = {
        'page_size': opts['pageSize'],
        'page_number': opts['pageNumber'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['www-authenticate'];
      var contentTypes = [];
      var accepts = ['application/json', 'application/xml'];
      var returnType = null;

      return this.apiClient.callApi(
        '/cases/pacer/search/case_no/{case_number}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the casesPacerSearchPartyTitleGet operation.
     * @callback module:api/CaseLookupApi~casesPacerSearchPartyTitleGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Case Search by Case Title or Party Name
     * Case Search by Case Title or Party Name
     * @param {module:model/String} _in Party name and/or Case title
     * @param {String} searchTerms Search Terms
     * @param {Object} opts Optional parameters
     * @param {String} opts.dateFiled Date Filed
     * @param {Number} opts.chapter Chapter
     * @param {Number} opts.pageSize Page Size
     * @param {Number} opts.pageNumber Page Number
     * @param {String} opts.sortColumn Sort Column
     * @param {String} opts.sortOrder Sort Order
     * @param {module:api/CaseLookupApi~casesPacerSearchPartyTitleGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.casesPacerSearchPartyTitleGet = function(_in, searchTerms, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter '_in' is set
      if (_in === undefined || _in === null) {
        throw new Error("Missing the required parameter '_in' when calling casesPacerSearchPartyTitleGet");
      }

      // verify the required parameter 'searchTerms' is set
      if (searchTerms === undefined || searchTerms === null) {
        throw new Error("Missing the required parameter 'searchTerms' when calling casesPacerSearchPartyTitleGet");
      }


      var pathParams = {
      };
      var queryParams = {
        'in': _in,
        'search_terms': searchTerms,
        'date_filed': opts['dateFiled'],
        'chapter': opts['chapter'],
        'page_size': opts['pageSize'],
        'page_number': opts['pageNumber'],
        'sort_column': opts['sortColumn'],
        'sort_order': opts['sortOrder'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['www-authenticate'];
      var contentTypes = [];
      var accepts = ['application/json', 'application/xml'];
      var returnType = null;

      return this.apiClient.callApi(
        '/cases/pacer/search/party_title', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
